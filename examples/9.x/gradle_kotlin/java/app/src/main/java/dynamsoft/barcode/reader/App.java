/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dynamsoft.barcode.reader;

import com.dynamsoft.dbr.*;

import java.nio.file.*; 

public class App {

    private BarcodeReader mBarcodeReader;

    public App(String license) {
        try {
            mBarcodeReader = new BarcodeReader(license);
        } catch (Exception e) {
            //TODO: handle exception
            e.printStackTrace();
        }
        
    }

    public BarcodeReader getBarcodeReader() {
        return mBarcodeReader;
    }

    public String getGreeting() {
        return "Hello Dynamsoft Barcode Reader!";
    }

    public TextResult[] decodeFile(String file) {
        TextResult[] results = null;
        // Read barcode           
        try {
            //Best coverage settings
            // br.initRuntimeSettingsWithString("{\"ImageParameter\":{\"Name\":\"BestCoverage\",\"DeblurLevel\":9,\"ExpectedBarcodesCount\":512,\"ScaleDownThreshold\":100000,\"LocalizationModes\":[{\"Mode\":\"LM_CONNECTED_BLOCKS\"},{\"Mode\":\"LM_SCAN_DIRECTLY\"},{\"Mode\":\"LM_STATISTICS\"},{\"Mode\":\"LM_LINES\"},{\"Mode\":\"LM_STATISTICS_MARKS\"}],\"GrayscaleTransformationModes\":[{\"Mode\":\"GTM_ORIGINAL\"},{\"Mode\":\"GTM_INVERTED\"}]}}", EnumConflictMode.CM_OVERWRITE);
            //Best speed settings
            //br.initRuntimeSettingsWithString("{\"ImageParameter\":{\"Name\":\"BestSpeed\",\"DeblurLevel\":3,\"ExpectedBarcodesCount\":512,\"LocalizationModes\":[{\"Mode\":\"LM_SCAN_DIRECTLY\"}],\"TextFilterModes\":[{\"MinImageDimension\":262144,\"Mode\":\"TFM_GENERAL_CONTOUR\"}]}}",EnumConflictMode.CM_OVERWRITE);
            //Balance settings
            mBarcodeReader.initRuntimeSettingsWithString("{\"ImageParameter\":{\"Name\":\"Balance\",\"DeblurLevel\":5,\"ExpectedBarcodesCount\":512,\"LocalizationModes\":[{\"Mode\":\"LM_CONNECTED_BLOCKS\"},{\"Mode\":\"LM_STATISTICS\"}]}}",EnumConflictMode.CM_OVERWRITE);
            long start = System.currentTimeMillis();
            results = mBarcodeReader.decodeFile(file, "");
            long end = System.currentTimeMillis();

            if (results == null || results.length == 0) {
                System.out.println(String.format("No barcode found. Total time cost: %d ms.", (end - start)));
            } else {
                System.out.println(String.format("Total barcode(s) found: %d. Total time cost: %d ms.", results.length, (end -start)));
                int index = 0;
                for (TextResult result : results) {
                    System.out.println(String.format("  Barcode %d:", index++));
                    if(result.barcodeFormat != 0){
                        System.out.println("    Type: " + result.barcodeFormatString);
                    } else {
                        System.out.println("    Type: " + result.barcodeFormatString_2);
                    }
                    
                    System.out.println("    Value: " + result.barcodeText);

                    System.out.println(String.format("    Region points: {(%d,%d),(%d,%d),(%d,%d),(%d,%d)}",
                    result.localizationResult.resultPoints[0].x, result.localizationResult.resultPoints[0].y,
                    result.localizationResult.resultPoints[1].x,result.localizationResult.resultPoints[1].y,
                    result.localizationResult.resultPoints[2].x,result.localizationResult.resultPoints[2].y,
                    result.localizationResult.resultPoints[3].x,result.localizationResult.resultPoints[3].y));
                }
            }
        } catch (BarcodeReaderException e) {
            e.printStackTrace();
        }
        
        return results;
    }

    public static void main(String[] args) throws Exception {
        
        System.out.println("Working Directory = " + System.getProperty("user.dir"));

        if (args.length == 0) {
            String newLine = System.getProperty("line.separator");
            String s = new StringBuilder()
            .append("Usage:")
            .append(newLine)
            .append("    ./gradlew run --args=\"<image file> <license file>\"").append(newLine)
            .toString();

            System.out.println(s);
            return;
        }

        String file = args[0];
        String license = "DLS2eyJoYW5kc2hha2VDb2RlIjoiMjAwMDAxLTE2NDk4Mjk3OTI2MzUiLCJvcmdhbml6YXRpb25JRCI6IjIwMDAwMSIsInNlc3Npb25QYXNzd29yZCI6IndTcGR6Vm05WDJrcEQ5YUoifQ==";

        if (args.length == 2) {
            
            license = new String(Files.readAllBytes(Paths.get(args[1]))); 
        }
        App app = new App(license);
        System.out.println(app.getGreeting());
        app.decodeFile(file);

    }
}

